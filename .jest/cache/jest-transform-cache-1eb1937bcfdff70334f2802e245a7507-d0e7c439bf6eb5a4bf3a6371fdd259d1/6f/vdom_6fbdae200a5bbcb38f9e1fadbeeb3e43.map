{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/utils/vdom.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,IAAM,GAAG,GAAG,SAAN,GAAM,CAAC,EAAD,EAAyD,KAAzD;AAAA,SACjB,KAAK,CAAC,GAAN,CACE,UAAC,IAAD,EAAO,CAAP;AAAA,WACE,eAAM,cAAN,CAAqB,IAArB,IACI,eAAM,YAAN,CAAmB,EAAE,CAAC,IAAD,CAArB,EAA6B;AAAE,MAAA,GAAG,EAAE;AAAP,KAA7B,CADJ,GAEI,IAHN;AAAA,GADF,CADiB;AAAA,CAAZ;;;;AAUA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,SAAD,EAA6B,KAA7B;AAAA,SACzB,GAAG,CAAC,UAAA,CAAC;AAAA,WAAI,CAAJ;AAAA,GAAF,EAAS,CAAC,CAAC,WAAF,CAAc,SAAd,EAAyB,KAAzB,CAAT,CADsB;AAAA,CAApB","sourcesContent":["import React from 'react';\nimport * as R from 'ramda';\n\nexport const map = (fn: ((node: React.ReactElement) => React.ReactElement), nodes: React.ReactNode[]) => (\n  nodes.map(\n    (node, i) => (\n      React.isValidElement(node)\n        ? React.cloneElement(fn(node), { key: i })\n        : node\n    )\n  )\n);\n\nexport const intersperse = (separator: React.ReactNode, nodes: React.ReactNode[]) => (\n  map(i => i, R.intersperse(separator, nodes))\n);\n"]}