{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/containers/Screens/Search/Parts/Results/SongCard/index.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAMA,IAAM,QAAQ,GAA6B,SAArC,QAAqC,CAAA,KAAK,EAAG;AACjD,MAAM,UAAU,GAAG,oBAAQ,cAAc,CAAC,cAAvB,EAAuC,EAAvC,CAAnB;AACA,MAAM,MAAM,GAAG,6BAAY,UAAC,KAAD;AAAA,WAAsB,UAAU,CAAC,KAAD,EAAQ,KAAR,CAAhC;AAAA,GAAZ,CAAf;AAEA,SACE,eAAA,aAAA,CAAC,2BAAD,EAAmB;AACjB,IAAA,OAAO,EAAE,MAAM,CAAC,YADC;AAEjB,IAAA,KAAK,EAAE,MAAM,CAAC,SAFG;AAGjB,IAAA,QAAQ,EAAE,MAAM,CAAC,UAHA;AAIjB,IAAA,GAAG,EAAE,MAAM,CAAC;AAJK,GAAnB,CADF;AAQD,CAZD;;eAce,Q","sourcesContent":["import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'states/root/reducer';\nimport * as songsSelectors from 'states/songs/selectors';\nimport HorizontalDataCard from 'components/Shared/Cards/HorizontalDataCard';\n\ntype SongCardProps = {\n  id: string;\n};\n\nconst SongCard: React.SFC<SongCardProps> = props => {\n  const selectById = useMemo(songsSelectors.makeSelectById, []);\n  const result = useSelector((state: RootState) => selectById(state, props));\n\n  return (\n    <HorizontalDataCard\n      artwork={result.artworkUrl60}\n      title={result.trackName}\n      subtitle={result.artistName}\n      url={result.trackViewUrl}\n    />\n  );\n};\n\nexport default SongCard;\n"]}