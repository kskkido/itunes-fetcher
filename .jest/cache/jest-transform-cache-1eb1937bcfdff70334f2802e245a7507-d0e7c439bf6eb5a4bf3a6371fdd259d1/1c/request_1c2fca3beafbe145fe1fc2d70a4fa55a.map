{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/types/request.ts"],"names":[],"mappings":";;;;AA6BA,IAAY,UAAZ;;;AAAA,CAAA,UAAY,UAAZ,EAAsB;AACpB,EAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAND,EAAY,UAAU,0BAAV,UAAU,GAAA,EAAA,CAAtB","sourcesContent":["export type Request<Result> = (\n  (url: string, options?: RequestInit) => Promise<Result>\n);\n\nexport type RequestStatus = (\n  'error' |\n  'loading' |\n  'success' |\n  'unsent'\n);\n\nexport type FormattedRequestError = {\n  message: string;\n  status?: number;\n  data?: any;\n};\n\nexport type RequestError = (\n  Error |\n  ErrorWithResponse\n);\n\nexport type ErrorWithResponse = (\n  Error &\n  {\n    response: Response;\n  }\n);\n\nexport enum HttpMethod {\n  put = 'PUT',\n  post = 'POST',\n  get = 'GET',\n  delete = 'DELETE',\n  patch = 'PATCH',\n}\n\nexport type FetchApiConfig = {\n  url: string;\n  params?: Record<string, any>;\n};\n\n"]}