{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/components/Shared/Fields/SearchField/index.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AACA;;AASA,IAAM,SAAS,GAA8B,SAAvC,SAAuC,OAGxC;AAAA,MAFH,IAEG,QAFH,IAEG;AAAA,MADA,IACA;;AAAA,kBACyB,wBAAqB,IAArB,CADzB;AAAA,MACK,KADL,aACK,KADL;AAAA,MACY,QADZ,aACY,QADZ;;AAGH,SACE,eAAA,aAAA,CAAC,wBAAD,EAAgB,uBAAA,EAAA,EACV,IADU,EACN;AACR,IAAA,KAAK,EAAE,KADC;AAER,IAAA,YAAY,EAAE;AAFN,GADM,CAAhB,CADF;AAOD,CAbD;;eAee,S","sourcesContent":["import React from 'react';\nimport { Omit } from 'types/utility';\nimport { FieldValue } from './types';\nimport useField from 'hooks/useField';\nimport InputTextSearch, { InputTextSearchProps } from 'components/Shared/Inputs/InputTextSearch';\n\ntype TextFieldProps = (\n  {\n    name: string;\n  } &\n  Omit<InputTextSearchProps, 'value' | 'onChangeText'>\n);\n\nconst TextField: React.SFC<TextFieldProps> = ({\n  name,\n  ...rest\n}) => {\n  const { value, setValue } = useField<FieldValue>(name);\n\n  return (\n    <InputTextSearch\n      {...rest}\n      value={value}\n      onChangeText={setValue}\n    />\n  );\n};\n\nexport default TextField;\n"]}