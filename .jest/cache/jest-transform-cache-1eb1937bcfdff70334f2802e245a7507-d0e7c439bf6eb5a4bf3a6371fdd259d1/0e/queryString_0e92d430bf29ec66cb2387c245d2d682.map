{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/utils/queryString.ts"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AAEO,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,GAAD;AAAA,SAC/B,oBAAQ,GAAR,KAAgB,GAAG,KAAK,SAAxB,GACI,EADJ,SAEQ,qBAAY,SAAZ,CAAsB,GAAtB,CAHuB;AAAA,CAA1B;;;;AAMA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAe,KAAf;AAAA,SAC9B,qBAAY,KAAZ,CAAkB,KAAlB,CAD8B;AAAA,CAAzB","sourcesContent":["import queryString from 'query-string';\nimport { isEmpty } from 'ramda';\n\nexport const createQueryString = (obj?: Record<string, any>): string => (\n  isEmpty(obj) || obj === undefined\n    ? ''\n    : `?${queryString.stringify(obj)}`\n);\n\nexport const parseQueryString = <O extends {}>(query: string): O => (\n  queryString.parse(query) as O\n);\n"]}