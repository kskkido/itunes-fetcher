{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/hooks/useField.ts"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AAOA,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAU,IAAV,EAA8C;AAAA,iBAChC,wBADgC;AAAA,MACrD,MADqD,YACrD,MADqD;AAAA,MAC7C,QAD6C,YAC7C,QAD6C;;AAG7D,SAAO;AACL,IAAA,KAAK,EAAE,MAAM,CAAC,IAAD,CADR;AAEL,IAAA,QAAQ,EAAE,oBAAQ,QAAR,EAAkB,CAAC,IAAD,CAAlB;AAFL,GAAP;AAID,CAPD;;eASe,Q","sourcesContent":["import { partial } from 'ramda';\nimport useForm from './useForm';\n\ntype UseFieldPayload<V> = {\n  value: V;\n  setValue: (value: V) => void;\n};\n\nconst useField = <V = any>(name: string): UseFieldPayload<V> => {\n  const { values, setValue } = useForm();\n\n  return {\n    value: values[name],\n    setValue: partial(setValue, [name]),\n  };\n};\n\nexport default useField;\n"]}