{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/containers/Screens/Applications/Parts/ApplicationCard/index.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAMA,IAAM,WAAW,GAAgC,SAA3C,WAA2C,CAAA,KAAK,EAAG;AACvD,MAAM,UAAU,GAAG,oBAAQ,oBAAoB,CAAC,cAA7B,EAA6C,EAA7C,CAAnB;AACA,MAAM,MAAM,GAAG,6BAAY,UAAC,KAAD;AAAA,WAAsB,UAAU,CAAC,KAAD,EAAQ,KAAR,CAAhC;AAAA,GAAZ,CAAf;AAEA,SACE,eAAA,aAAA,CAAC,2BAAD,EAAmB;AACjB,IAAA,OAAO,EAAE,MAAM,CAAC,YAAP,IAAuB,EADf;AAEjB,IAAA,KAAK,EAAE,MAAM,CAAC,SAFG;AAGjB,IAAA,QAAQ,EAAE,MAAM,CAAC,UAHA;AAIjB,IAAA,GAAG,EAAE,MAAM,CAAC;AAJK,GAAnB,CADF;AAQD,CAZD;;eAce,W","sourcesContent":["import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'states/root/reducer';\nimport * as applicationsSelector from 'states/applications/selectors';\nimport HorizontalDataCard from 'components/Shared/Cards/HorizontalDataCard';\n\ntype ApplicationProps = {\n  id: string;\n};\n\nconst Application: React.SFC<ApplicationProps> = props => {\n  const selectById = useMemo(applicationsSelector.makeSelectById, []);\n  const result = useSelector((state: RootState) => selectById(state, props));\n\n  return (\n    <HorizontalDataCard\n      artwork={result.artworkUrl60 || ''}\n      title={result.trackName}\n      subtitle={result.artistName}\n      url={result.trackViewUrl}\n    />\n  );\n};\n\nexport default Application;\n"]}