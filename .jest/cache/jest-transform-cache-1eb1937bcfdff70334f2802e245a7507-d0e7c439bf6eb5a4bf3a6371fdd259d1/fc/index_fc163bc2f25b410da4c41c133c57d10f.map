{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/utils/request/error/index.ts"],"names":[],"mappings":";;;;;;;;;AACA;;AACA;;;;;;AAEO,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,KAAD;AAAA,SAC/B,CAAC,gCAAoB,KAApB,IACG,KAAK,CAAC,QAAN,CAAe,IAAf,GAAsB,IAAtB,CAA2B,UAAA,IAAI;AAAA,6BAAU,gCAAmB,KAAnB,CAAV;AAAqC,MAAA,IAAI,EAAJ;AAArC;AAAA,GAA/B,CADH,GAEG,OAAO,CAAC,MAAR,EAFJ,EAGE,KAHF,CAGQ;AAAA,WAAM,gCAAmB,KAAnB,CAAN;AAAA,GAHR,CAD+B;AAAA,CAA1B","sourcesContent":["import { RequestError, FormattedRequestError } from 'types/request';\nimport { formatRequestError } from './format';\nimport { isErrorWithResponse } from './match';\n\nexport const parseRequestError = (error: RequestError): Promise<FormattedRequestError> => (\n  (isErrorWithResponse(error)\n    ? error.response.json().then(data => ({ ...formatRequestError(error), data }))\n    : Promise.reject()\n  ).catch(() => formatRequestError(error))\n);\n"]}