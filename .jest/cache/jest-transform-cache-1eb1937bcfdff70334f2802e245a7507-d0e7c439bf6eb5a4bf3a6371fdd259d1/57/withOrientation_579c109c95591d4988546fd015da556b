201484f1372442a2a8d81e59001f70bd
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports, "__esModule", { value: true });exports.default = _default;exports.isOrientationLandscape = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));var _jsxFileName = "/Users/keisukekido/projects/itunesFetcher/node_modules/react-native-safe-area-view/withOrientation.js";














var isOrientationLandscape = function isOrientationLandscape(_ref) {var
  width = _ref.width,
  height = _ref.height;return (
    width > height);};exports.isOrientationLandscape = isOrientationLandscape;

function _default(
WrappedComponent)
{var
  withOrientation = function (_React$Component) {(0, _inherits2.default)(withOrientation, _React$Component);
    function withOrientation() {var _this;(0, _classCallCheck2.default)(this, withOrientation);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(withOrientation).call(this));_this.

















      handleOrientationChange = function (_ref2) {var window = _ref2.window;
        var isLandscape = isOrientationLandscape(window);
        _this.setState({ isLandscape: isLandscape });
      };var _isLandscape = isOrientationLandscape(_reactNative.Dimensions.get('window'));_this.state = { isLandscape: _isLandscape };return _this;}(0, _createClass2.default)(withOrientation, [{ key: "componentDidMount", value: function componentDidMount() {if (typeof _reactNative.Dimensions.addEventListener === 'function') {_reactNative.Dimensions.addEventListener('change', this.handleOrientationChange);}} }, { key: "componentWillUnmount", value: function componentWillUnmount() {if (typeof _reactNative.Dimensions.removeEventListener === 'function') {_reactNative.Dimensions.removeEventListener('change', this.handleOrientationChange);}} }, { key: "render", value: function render()

      {
        return React.createElement(WrappedComponent, (0, _extends2.default)({}, this.props, this.state, { __source: { fileName: _jsxFileName, lineNumber: 54 } }));
      } }]);return withOrientation;}(React.Component);


  return (0, _hoistNonReactStatics.default)(withOrientation, WrappedComponent);
}