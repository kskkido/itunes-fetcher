{"version":3,"sources":["/Users/keisukekido/projects/itunesFetcher/src/states/applications/reducer/records/byId.ts"],"names":[],"mappings":";;;;;;;AACA;;AACA;;AAMO,IAAM,WAAW,GAAG,4BAAyB,EAAzB,EACxB,IADwB,CAEvB,OAAO,CAAC,mBAFe,EAGvB,UAAC,CAAD,EAAI,OAAJ;AAAA,SACE,OAAO,CAAC,OAAR,CAAgB,MAAhB,CACE,UAAC,GAAD,EAAM,MAAN;AAAA,WAAkB,GAAG,MAAI,MAAM,CAAC,OAAX,CAAH,GAA2B,MAA3B,EAAmC,GAArD;AAAA,GADF,EAEE,EAFF,CADF;AAAA,CAHuB,CAApB","sourcesContent":["import { Application } from 'api/applications/types';\nimport { createReducer } from 'states/utils/reducer';\nimport * as actions from 'states/applications/actions';\n\nexport type ByIdState = (\n  Record<string, Application>\n);\n\nexport const byIdReducer = createReducer<ByIdState>({})\n  .case(\n    actions.applicationsReceive,\n    (_, payload) => (\n      payload.results.reduce(\n        (acc, result) => (acc[`${result.trackId}`] = result, acc),\n        {} as ByIdState\n      )\n    )\n  );\n"]}