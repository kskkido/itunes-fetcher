import { createSelector } from 'reselect';
const selectState = (rootState) => (rootState.applications);
const selectRecordsState = (rootState) => (selectState(rootState).records);
const selectRequestState = (rootState) => (selectState(rootState).request);
export const makeSelectAllIds = () => createSelector(selectRecordsState, ({ allIds }) => allIds);
export const makeSelectById = () => createSelector(selectRecordsState, (_, { id }) => id, ({ byId }, id) => byId[id]);
export const makeSelectRequestStatus = () => createSelector(selectRequestState, ({ status }) => status);
export const makeSelectRequestError = () => createSelector(selectRequestState, ({ error }) => error);
export const makeSelectRequestErrorMessage = () => createSelector(makeSelectRequestError(), error => error && error.message);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2tlaXN1a2VraWRvL3Byb2plY3RzL2l0dW5lc0ZldGNoZXIvc3JjL3N0YXRlcy9hcHBsaWNhdGlvbnMvc2VsZWN0b3JzL2luZGV4LnRzIiwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFHMUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxTQUFvQixFQUFFLEVBQUUsQ0FBQyxDQUM1QyxTQUFTLENBQUMsWUFBWSxDQUN2QixDQUFDO0FBRUYsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLFNBQW9CLEVBQUUsRUFBRSxDQUFDLENBQ25ELFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQy9CLENBQUM7QUFFRixNQUFNLGtCQUFrQixHQUFHLENBQUMsU0FBb0IsRUFBRSxFQUFFLENBQUMsQ0FDbkQsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FDL0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FDbEQsa0JBQWtCLEVBQ2xCLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUN2QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FDaEQsa0JBQWtCLEVBQ2xCLENBQUMsQ0FBWSxFQUFFLEVBQUUsRUFBRSxFQUFrQixFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQzVDLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FDM0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FDekQsa0JBQWtCLEVBQ2xCLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUN2QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsR0FBRyxFQUFFLENBQUMsY0FBYyxDQUN4RCxrQkFBa0IsRUFDbEIsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQ3JCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQy9ELHNCQUFzQixFQUFFLEVBQ3hCLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQ2hDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2tlaXN1a2VraWRvL3Byb2plY3RzL2l0dW5lc0ZldGNoZXIvc3JjL3N0YXRlcy9hcHBsaWNhdGlvbnMvc2VsZWN0b3JzL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAncmVzZWxlY3QnO1xuaW1wb3J0IHsgUm9vdFN0YXRlIH0gZnJvbSAnc3RhdGVzL3Jvb3QvcmVkdWNlcic7XG5cbmNvbnN0IHNlbGVjdFN0YXRlID0gKHJvb3RTdGF0ZTogUm9vdFN0YXRlKSA9PiAoXG4gIHJvb3RTdGF0ZS5hcHBsaWNhdGlvbnNcbik7XG5cbmNvbnN0IHNlbGVjdFJlY29yZHNTdGF0ZSA9IChyb290U3RhdGU6IFJvb3RTdGF0ZSkgPT4gKFxuICBzZWxlY3RTdGF0ZShyb290U3RhdGUpLnJlY29yZHNcbik7XG5cbmNvbnN0IHNlbGVjdFJlcXVlc3RTdGF0ZSA9IChyb290U3RhdGU6IFJvb3RTdGF0ZSkgPT4gKFxuICBzZWxlY3RTdGF0ZShyb290U3RhdGUpLnJlcXVlc3Rcbik7XG5cbmV4cG9ydCBjb25zdCBtYWtlU2VsZWN0QWxsSWRzID0gKCkgPT4gY3JlYXRlU2VsZWN0b3IoXG4gIHNlbGVjdFJlY29yZHNTdGF0ZSxcbiAgKHsgYWxsSWRzIH0pID0+IGFsbElkc1xuKTtcblxuZXhwb3J0IGNvbnN0IG1ha2VTZWxlY3RCeUlkID0gKCkgPT4gY3JlYXRlU2VsZWN0b3IoXG4gIHNlbGVjdFJlY29yZHNTdGF0ZSxcbiAgKF86IFJvb3RTdGF0ZSwgeyBpZCB9OiB7IGlkOiBzdHJpbmcgfSkgPT4gaWQsXG4gICh7IGJ5SWQgfSwgaWQpID0+IGJ5SWRbaWRdXG4pO1xuXG5leHBvcnQgY29uc3QgbWFrZVNlbGVjdFJlcXVlc3RTdGF0dXMgPSAoKSA9PiBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0UmVxdWVzdFN0YXRlLFxuICAoeyBzdGF0dXMgfSkgPT4gc3RhdHVzXG4pO1xuXG5leHBvcnQgY29uc3QgbWFrZVNlbGVjdFJlcXVlc3RFcnJvciA9ICgpID0+IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RSZXF1ZXN0U3RhdGUsXG4gICh7IGVycm9yIH0pID0+IGVycm9yXG4pO1xuXG5leHBvcnQgY29uc3QgbWFrZVNlbGVjdFJlcXVlc3RFcnJvck1lc3NhZ2UgPSAoKSA9PiBjcmVhdGVTZWxlY3RvcihcbiAgbWFrZVNlbGVjdFJlcXVlc3RFcnJvcigpLFxuICBlcnJvciA9PiBlcnJvciAmJiBlcnJvci5tZXNzYWdlXG4pO1xuIl0sInZlcnNpb24iOjN9