/// <reference types="jest" />
import React from 'react';
import TestRenderer from 'react-test-renderer';
import StoreProvider from '_tests/utils/Providers/StoreProvider';
import { payload } from 'api/songs/_mocks/get';
import { songsReceive } from 'states/songs/actions';
import { batchedActionsReducer } from '_tests/utils/states/reducer';
import Songs from '../';
const setup = () => ({
    tree: TestRenderer.create(React.createElement(StoreProvider, { state: batchedActionsReducer({}, [songsReceive(payload)]) },
        React.createElement(Songs, null))),
});
describe('Songs', () => {
    it('should render as expected', () => {
        expect(setup().tree.toJSON()).toMatchSnapshot();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2tlaXN1a2VraWRvL3Byb2plY3RzL2l0dW5lc0ZldGNoZXIvc3JjL2NvbXBvbmVudHMvU2NyZWVucy9Tb25ncy9fdGVzdHMvU29uZ3MudGVzdC50c3giLCJtYXBwaW5ncyI6IkFBQUEsOEJBQThCO0FBQzlCLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLFlBQVksTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLGFBQWEsTUFBTSxzQ0FBc0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3BFLE9BQU8sS0FBSyxNQUFNLEtBQUssQ0FBQztBQUV4QixNQUFNLEtBQUssR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ25CLElBQUksRUFBRSxZQUFZLENBQUMsTUFBTSxDQUN2QixvQkFBQyxhQUFhLElBQ1osS0FBSyxFQUFFLHFCQUFxQixDQUMxQixFQUFFLEVBQ0YsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FDeEI7UUFDRCxvQkFBQyxLQUFLLE9BQUcsQ0FDSyxDQUNqQjtDQUNGLENBQUMsQ0FBQztBQUVILFFBQVEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO0lBQ3JCLEVBQUUsQ0FBQywyQkFBMkIsRUFBRSxHQUFHLEVBQUU7UUFDbkMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ2xELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2tlaXN1a2VraWRvL3Byb2plY3RzL2l0dW5lc0ZldGNoZXIvc3JjL2NvbXBvbmVudHMvU2NyZWVucy9Tb25ncy9fdGVzdHMvU29uZ3MudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJqZXN0XCIgLz5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVGVzdFJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IFN0b3JlUHJvdmlkZXIgZnJvbSAnX3Rlc3RzL3V0aWxzL1Byb3ZpZGVycy9TdG9yZVByb3ZpZGVyJztcbmltcG9ydCB7IHBheWxvYWQgfSBmcm9tICdhcGkvc29uZ3MvX21vY2tzL2dldCc7XG5pbXBvcnQgeyBzb25nc1JlY2VpdmUgfSBmcm9tICdzdGF0ZXMvc29uZ3MvYWN0aW9ucyc7XG5pbXBvcnQgeyBiYXRjaGVkQWN0aW9uc1JlZHVjZXIgfSBmcm9tICdfdGVzdHMvdXRpbHMvc3RhdGVzL3JlZHVjZXInO1xuaW1wb3J0IFNvbmdzIGZyb20gJy4uLyc7XG5cbmNvbnN0IHNldHVwID0gKCkgPT4gKHtcbiAgdHJlZTogVGVzdFJlbmRlcmVyLmNyZWF0ZShcbiAgICA8U3RvcmVQcm92aWRlclxuICAgICAgc3RhdGU9e2JhdGNoZWRBY3Rpb25zUmVkdWNlcihcbiAgICAgICAge30sXG4gICAgICAgIFtzb25nc1JlY2VpdmUocGF5bG9hZCldXG4gICAgICApfT5cbiAgICAgIDxTb25ncyAvPlxuICAgIDwvU3RvcmVQcm92aWRlcj5cbiAgKSxcbn0pO1xuXG5kZXNjcmliZSgnU29uZ3MnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgcmVuZGVyIGFzIGV4cGVjdGVkJywgKCkgPT4ge1xuICAgIGV4cGVjdChzZXR1cCgpLnRyZWUudG9KU09OKCkpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9